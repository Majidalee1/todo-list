{"version":3,"sources":["interfaces/todo.ts","shared/navbar.tsx","redux/actions.tsx","components/addtodo.tsx","components/Todoitem.tsx","pages/Homepage.tsx","pages/Completed.tsx","pages/Trashpage.tsx","App.tsx","redux/store.tsx","redux/reducers.tsx","shared/localStorage.ts","index.tsx"],"names":["Actions","Navbar","className","to","style","color","backgroundColor","borderRadius","Todos","useState","todo","setTodo","dispatch","useDispatch","type","required","title","value","onChange","e","target","handleSubmit","onClick","todoItem","console","log","Action","ADD_TODO","payload","id","Date","getTime","toString","text","isPending","TodoItem","TodoList","handleClick","map","index","key","dueDate","toDateString","completedDate","role","paddingRight","paddingLeft","_","ADD_TO_TRASH","deleteTodo","float","name","ADD_TO_COMPLETED","completeTodo","HomePage","todoList","useSelector","state","filter","isCompleted","ADD_BACK_TO_PENDING","unCompletedTodo","isDeleted","UNDO_DELETE","unDeleteTodo","App","basename","process","exact","path","Completed","store","createStore","currentState","action","serializedState","localStorage","getItem","JSON","parse","err","loadState","todos","slice","Object","assign","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLASYA,E,+DC0BGC,EAhCA,WACb,OACE,yBAAKC,UAAU,UACb,wCACA,yBAAKA,UAAU,SACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CACEA,GAAG,aACHC,MAAO,CACLC,MAAO,QACPC,gBAAiB,QACjBC,aAAc,QALlB,aAUA,kBAAC,IAAD,CACEJ,GAAG,SACHC,MAAO,CACLC,MAAO,QACPC,gBAAiB,UAEjBC,aAAc,QANlB,Y,kBDVIP,K,oBAAAA,E,6BAAAA,E,qBAAAA,E,8BAAAA,E,2BAAAA,M,KEPL,ICqDQQ,EAnDwB,WAAO,IAAD,EACnBC,mBAAS,IADU,mBACpCC,EADoC,KAC9BC,EAD8B,KAErCC,EAAWC,cA0BjB,OACE,yBAAKX,UAAU,UACb,0CAEA,4CACA,2BACEY,KAAK,OACLC,UAAQ,EACRC,MAAM,eACNC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAlCK,SAACA,GACpBR,EAAQQ,EAAEC,OAAOH,OAiCII,CAAaF,MAEhC,4BACEH,MAAM,YACNd,UAAU,gBACVoB,QAAS,kBAAOV,GD7CAW,EC6CiBb,ED5CvCc,QAAQC,IAAIF,GAEL,CACLT,KAAMY,EAAOC,SACbC,QAAS,CACPC,IAAI,IAAIC,MAAOC,UAAUC,WACzBC,KAAMV,EACNW,WAAW,MCqCgCvB,EAAQ,ID7ClC,IAACY,IC0ClB,cCUSY,EA9CV,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACVzB,EAAWC,cAEjB,OACE,yBAAKX,UAAU,aACZkC,IAAQ,OACPA,QADO,IACPA,OADO,EACPA,EAAUE,KAAI,SAAC5B,EAAiB6B,GAAlB,aACZ,yBAAKrC,UAAU,eAAesC,IAAK9B,EAAKmB,IACtC,4BAAKnB,EAAKuB,MACV,qCAAIvB,EAAK+B,eAAT,aAAI,EAAcC,gBAClB,yCAAehC,EAAKiC,eAEnBN,EACC,0BACEO,KAAK,SACLxC,MAAO,CACLC,MAAO,QACPC,gBAAiB,QACjBC,aAAc,MACdsC,aAAc,OACdC,YAAa,QAEfxB,QAAS,SAACyB,GAAD,OAAOV,EAAYE,KAT9B,QAcA,6BACE,4BAAQjB,QAAS,kBAAMV,EFrBb,SAAC2B,GAGzB,OAFAf,QAAQC,IAAIc,GAEL,CACLzB,KAAMY,EAAOsB,aACbT,SEgB4CU,CAAWV,MAA3C,eAGA,2BACEzB,KAAK,QACLV,MAAO,CAAE8C,MAAO,SAChBrB,GAAG,WACHsB,KAAK,WACLjC,SAAU,kBAAMN,EFpBN,SAAC2B,GAC3B,MAAO,CACLzB,KAAMY,EAAO0B,iBACbb,SEiBuCc,CAAad,eCdzCe,EAvB0C,WACvD,IAAMC,EAAWC,aAAY,SAACC,GAK5B,OAHcA,EAGDC,QAAO,SAAChD,GAAD,OAAUA,EAAKwB,gBAQrC,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAmBE,SAAUmB,IAF/B,MCbJ,IAuBeD,EAvB0C,WACvD,IAAMC,EAAWC,aAAY,SAACC,GAO5B,OANAjC,QAAQC,IAAIgC,GAGEA,EAGDC,QAAO,SAAChD,GAAD,OAAUA,EAAKiD,kBAE/B/C,EAAWC,cAKjB,OACE,6BAEE,kBAAC,EAAD,CAAmBuB,SAAUmB,EAAUlB,YAN3C,SAAqBE,GACnB3B,EJS2B,SAAC2B,GAG9B,OAFAf,QAAQC,IAAIc,GAEL,CACLzB,KAAMY,EAAOkC,oBACbrB,SIdSsB,CAAgBtB,OAGzB,MCGWe,EArB0C,WACvD,IAAMC,EAAWC,aAAY,SAACC,GAK5B,OAJAjC,QAAQC,IAAIgC,GAEEA,EAEDC,QAAO,SAAChD,GAAD,OAAUA,EAAKoD,gBAG/BlD,EAAWC,cAKjB,OACE,6BACE,kBAAC,EAAD,CAAmBuB,SAAUmB,EAAUlB,YAL3C,SAAqBE,GACnB3B,ELqBwB,SAAC2B,GAG3B,OAFAf,QAAQC,IAAIc,GAEL,CACLzB,KAAMY,EAAOqC,YACbxB,SK1BSyB,CAAazB,OAGtB,MCcW0B,MA7Bf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,cAChB,yBAAKjE,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,UACV,kBAAC,EAAD,Y,+BChBDE,EAAQC,aCFS,SAACC,EAAmBC,GAAiB,IAAD,IAGhE,OAFAD,EAAY,oBCJW,WACvB,IACE,IAAME,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDJaC,UAAH,aAAG,EAAaC,aAAhB,QAAyB,GAE7BR,EAAO5D,MACb,KAAKd,EAAQ2B,SACX,IAAMC,EAAO,OAAG8C,QAAH,IAAGA,OAAH,EAAGA,EAAQ9C,QAGxB,OAFAJ,QAAQC,IAAIG,GAEN,GAAN,mBACK6C,GADL,gBAGO7C,KAGT,KAAK5B,EAAQoD,iBAGX,OAFA5B,QAAQC,IAAIgD,GAEN,GAAN,mBACKA,EAAaU,MAAM,EAAGT,EAAOnC,QADlC,CAEE6C,OAAOC,OAAO,GAAIZ,EAAaC,EAAOnC,OAAQ,CAC5CoB,aAAa,EACbzB,WAAW,EACX4B,WAAW,KALf,YAOKW,EAAaU,MAAMT,EAAOnC,MAAQ,KAGzC,KAAKvC,EAAQ4D,oBACX,MAAM,GAAN,mBACKa,EAAaU,MAAM,EAAGT,EAAOnC,QADlC,CAEE6C,OAAOC,OAAO,GAAIZ,EAAaC,EAAOnC,OAAQ,CAC5CoB,aAAa,EACbzB,WAAW,EACX4B,WAAW,KALf,YAOKW,EAAaU,MAAMT,EAAOnC,MAAQ,KAGzC,KAAKvC,EAAQgD,aACX,MAAM,GAAN,mBACKyB,EAAaU,MAAM,EAAGT,EAAOnC,QADlC,CAEE6C,OAAOC,OAAO,GAAIZ,EAAaC,EAAOnC,OAAQ,CAC5CuB,WAAW,EACX5B,WAAW,KAJf,YAMKuC,EAAaU,MAAMT,EAAOnC,MAAQ,KAGzC,KAAKvC,EAAQ+D,YACX,MAAM,GAAN,mBACKU,EAAaU,MAAM,EAAGT,EAAOnC,QADlC,CAEE6C,OAAOC,OAAO,GAAIZ,EAAaC,EAAOnC,OAAQ,CAC5CoB,aAAa,EACbzB,WAAW,EACX4B,WAAW,KALf,YAOKW,EAAaU,MAAMT,EAAOnC,MAAQ,KAGzC,QACE,OAAOkC,MDxDbjD,QAAQC,IAAI8C,GAEZA,EAAMe,UACJC,oBAAS,YEEc,SAAC9B,GACxB,IACE,IAAMkB,EAAkBG,KAAKU,UAAU/B,GACvCmB,aAAaa,QAAQ,QAASd,GAC9B,SACAnD,QAAQC,IAAI,mBFNZiE,CAAU,CACRR,MAAOX,EAAMoB,aAEfnE,QAAQC,IAAI8C,EAAMoB,cACjB,MGRLC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUvB,MAAOA,GACf,kBAAC,EAAD,QAGJwB,SAASC,eAAe,W","file":"static/js/main.bccd84b9.chunk.js","sourcesContent":["export interface ITodoItem {\r\n  id: number;\r\n  text: string;\r\n  dueDate?: Date;\r\n  completedDate?: Date;\r\n  isCompleted: boolean;\r\n  isDeleted: boolean;\r\n}\r\n\r\nexport enum Actions {\r\n  ADD_TODO = \"ADD_TODO\",\r\n  ADD_TO_COMPLETED = \"COMPLETED\",\r\n  ADD_TO_TRASH = \"TRASH\",\r\n  ADD_BACK_TO_PENDING = \"REVERSE\",\r\n  UNDO_DELETE = \"UNDO_DELETE\",\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>Todo'ist</h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link\r\n          to=\"/completed\"\r\n          style={{\r\n            color: \"white\",\r\n            backgroundColor: \"green\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          Completed\r\n        </Link>\r\n        <Link\r\n          to=\"/trash\"\r\n          style={{\r\n            color: \"black\",\r\n            backgroundColor: \"#F1356D\",\r\n\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          Trash\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Actions as Action } from \"../interfaces/todo\";\r\n\r\nexport const addTodo = (todoItem: any) => {\r\n  console.log(todoItem);\r\n\r\n  return {\r\n    type: Action.ADD_TODO,\r\n    payload: {\r\n      id: new Date().getTime().toString(),\r\n      text: todoItem,\r\n      isPending: true,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (index: any) => {\r\n  console.log(index);\r\n\r\n  return {\r\n    type: Action.ADD_TO_TRASH,\r\n    index,\r\n  };\r\n};\r\n\r\nexport const completeTodo = (index: any) => {\r\n  return {\r\n    type: Action.ADD_TO_COMPLETED,\r\n    index,\r\n  };\r\n};\r\n\r\nexport const unCompletedTodo = (index: any) => {\r\n  console.log(index);\r\n\r\n  return {\r\n    type: Action.ADD_BACK_TO_PENDING,\r\n    index,\r\n  };\r\n};\r\n\r\nexport const unDeleteTodo = (index: any) => {\r\n  console.log(index);\r\n\r\n  return {\r\n    type: Action.UNDO_DELETE,\r\n    index,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../redux/actions\";\r\n\r\nconst Todos: React.FunctionComponent = () => {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: any) => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  //   return (\r\n  //     <div className=\"addTodos\">\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         onChange={(e) => handleChange(e)}\r\n  //         className=\"todo-input\"\r\n  //         value={todo}\r\n  //       />\r\n\r\n  //       <button\r\n  //         className=\"add-btn\"\r\n  //         onClick={() => (dispatch(addTodo(todo)), setTodo(\"\"))}\r\n  //       >\r\n  //         Add\r\n  //       </button>\r\n  //       <br />\r\n  //     </div>\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a Todo</h2>\r\n\r\n      <label>Add Item:</label>\r\n      <input\r\n        type=\"text\"\r\n        required\r\n        title=\"addTodoInput\"\r\n        value={todo}\r\n        onChange={(e) => handleSubmit(e)}\r\n      />\r\n      <button\r\n        title=\"addButton\"\r\n        className=\"create button\"\r\n        onClick={() => (dispatch(addTodo(todo)), setTodo(\"\"))}\r\n      >\r\n        Add Item\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport { ITodoItem as TodoModel } from \"../interfaces/todo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { completeTodo, deleteTodo } from \"../redux/actions\";\r\n\r\nconst TodoItem: React.FunctionComponent<{\r\n  TodoList: TodoModel[];\r\n  handleClick?: any;\r\n}> = ({ TodoList, handleClick }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"blog-list\">\r\n      {TodoList &&\r\n        TodoList?.map((todo: TodoModel, index) => (\r\n          <div className=\"blog-preview\" key={todo.id}>\r\n            <h4>{todo.text}</h4>\r\n            <p>{todo.dueDate?.toDateString()}</p>\r\n            <p>created at {todo.completedDate}</p>\r\n\r\n            {handleClick ? (\r\n              <span\r\n                role=\"button\"\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"green\",\r\n                  borderRadius: \"8px\",\r\n                  paddingRight: \"20px\",\r\n                  paddingLeft: \"20px\",\r\n                }}\r\n                onClick={(_) => handleClick(index)}\r\n              >\r\n                undo\r\n              </span>\r\n            ) : (\r\n              <div>\r\n                <button onClick={() => dispatch(deleteTodo(index))}>\r\n                  delete todo\r\n                </button>\r\n                <input\r\n                  type=\"radio\"\r\n                  style={{ float: \"right\" }}\r\n                  id=\"f-option\"\r\n                  name=\"selector\"\r\n                  onChange={() => dispatch(completeTodo(index))}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddTodos from \"../components/addtodo\";\r\nimport TodoItemComponent from \"../components/Todoitem\";\r\n\r\nexport interface HomePgaeProps {}\r\n\r\nconst HomePage: React.FunctionComponent<HomePgaeProps> = () => {\r\n  const todoList = useSelector((state) => {\r\n    //@ts-ignore\r\n    const todos = state;\r\n\r\n    //@ts-ignore\r\n    return todos.filter((todo) => todo.isPending);\r\n    // return todos;\r\n  });\r\n\r\n  // const todoList = useSelector((state) => state?.TodoReducer.data);\r\n\r\n  // const todoList = getTodos();\r\n\r\n  return (\r\n    <div>\r\n      <AddTodos />\r\n      <TodoItemComponent TodoList={todoList} />;\r\n      {/* <TodoItemComponent TodoList={completedItems} handleClick={handleClick} />; */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TodoItemComponent from \"../components/Todoitem\";\r\nimport { unCompletedTodo } from \"../redux/actions\";\r\n\r\nexport interface HomePgaeProps {}\r\n\r\nexport function getTodos() {}\r\n\r\nconst HomePage: React.FunctionComponent<HomePgaeProps> = () => {\r\n  const todoList = useSelector((state) => {\r\n    console.log(state);\r\n    //@ts-ignore\r\n\r\n    const todos = state;\r\n    //@ts-ignore\r\n\r\n    return todos.filter((todo) => todo.isCompleted);\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClick(index: any) {\r\n    dispatch(unCompletedTodo(index));\r\n  }\r\n  return (\r\n    <div>\r\n      {/* <TodoItemComponent TodoList={todoList}  />; */}\r\n      <TodoItemComponent TodoList={todoList} handleClick={handleClick} />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TodoItemComponent from \"../components/Todoitem\";\r\nimport { unDeleteTodo } from \"../redux/actions\";\r\n\r\nexport interface HomePgaeProps {}\r\n\r\nconst HomePage: React.FunctionComponent<HomePgaeProps> = () => {\r\n  const todoList = useSelector((state) => {\r\n    console.log(state);\r\n    //@ts-ignore\r\n    const todos = state;\r\n    //@ts-ignore\r\n    return todos.filter((todo) => todo.isDeleted);\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClick(index: any) {\r\n    dispatch(unDeleteTodo(index));\r\n  }\r\n  return (\r\n    <div>\r\n      <TodoItemComponent TodoList={todoList} handleClick={handleClick} />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Navbar from \"./shared/navbar\";\nimport HomePage from \"./pages/Homepage\";\nimport Completed from \"./pages/Completed\";\nimport Trash from \"./pages/Trashpage\";\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/completed\">\n              <Completed />\n            </Route>\n            <Route path=\"/trash\">\n              <Trash />\n            </Route>\n            {/* <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route> */}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore } from \"@reduxjs/toolkit\";\r\nimport { throttle } from \"lodash\";\r\nimport { saveState } from \"../shared/localStorage\";\r\nimport { AddTodoReducer } from \"./reducers\";\r\n\r\nexport const store = createStore(AddTodoReducer);\r\n\r\nconsole.log(store);\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      todos: store.getState(),\r\n    });\r\n    console.log(store.getState());\r\n  }, 1000)\r\n);\r\n","import { Actions } from \"../interfaces/todo\";\r\nimport { loadState } from \"../shared/localStorage\";\r\n\r\nexport const AddTodoReducer = (currentState: any, action: any) => {\r\n  currentState = loadState()?.todos ?? [];\r\n\r\n  switch (action.type) {\r\n    case Actions.ADD_TODO:\r\n      const payload = action?.payload;\r\n      console.log(payload);\r\n\r\n      return [\r\n        ...currentState,\r\n        {\r\n          ...payload,\r\n        },\r\n      ];\r\n    case Actions.ADD_TO_COMPLETED:\r\n      console.log(currentState);\r\n\r\n      return [\r\n        ...currentState.slice(0, action.index),\r\n        Object.assign({}, currentState[action.index], {\r\n          isCompleted: true,\r\n          isPending: false,\r\n          isDeleted: false,\r\n        }),\r\n        ...currentState.slice(action.index + 1),\r\n      ];\r\n\r\n    case Actions.ADD_BACK_TO_PENDING:\r\n      return [\r\n        ...currentState.slice(0, action.index),\r\n        Object.assign({}, currentState[action.index], {\r\n          isCompleted: false,\r\n          isPending: true,\r\n          isDeleted: false,\r\n        }),\r\n        ...currentState.slice(action.index + 1),\r\n      ];\r\n\r\n    case Actions.ADD_TO_TRASH:\r\n      return [\r\n        ...currentState.slice(0, action.index),\r\n        Object.assign({}, currentState[action.index], {\r\n          isDeleted: true,\r\n          isPending: false,\r\n        }),\r\n        ...currentState.slice(action.index + 1),\r\n      ];\r\n\r\n    case Actions.UNDO_DELETE:\r\n      return [\r\n        ...currentState.slice(0, action.index),\r\n        Object.assign({}, currentState[action.index], {\r\n          isCompleted: false,\r\n          isPending: true,\r\n          isDeleted: false,\r\n        }),\r\n        ...currentState.slice(action.index + 1),\r\n      ];\r\n\r\n    default:\r\n      return currentState;\r\n  }\r\n};\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: any) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch {\r\n    console.log(\"unable to save\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}